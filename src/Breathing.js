// Breathing.js ‚Äî –¥–∏—Ö–∞–ª—å–Ω–∞ –≤–ø—Ä–∞–≤–∞ –∑ –∞–¥–∞–ø—Ç–∞—Ü—ñ—î—é –ø—ñ–¥ –µ–º–æ—Ü—ñ—é —ñ –∞–≤–∞—Ç–∞—Ä–∞
import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

export default function Breathing() {
  const navigate = useNavigate();
  const [phase, setPhase] = useState('–í–¥–∏—Ö');
  const [count, setCount] = useState(4);
  const [studentId, setStudentId] = useState(null);
  const [mood, setMood] = useState('');
  const [assistant, setAssistant] = useState('üß† –õ—é–º—ñ');
  const [cycleCount, setCycleCount] = useState(0);

  useEffect(() => {
    setStudentId(localStorage.getItem('studentId'));
    setMood(localStorage.getItem('selectedMood') || '');
    setAssistant(localStorage.getItem('assistant') || 'üß† –õ—é–º—ñ');
  }, []);

  useEffect(() => {
    const interval = setInterval(() => {
      setCount((prev) => {
        if (prev === 1) {
          setPhase((prevPhase) => {
            const next =
              prevPhase === '–í–¥–∏—Ö' ? '–ó–∞—Ç—Ä–∏–º–∫–∞' :
              prevPhase === '–ó–∞—Ç—Ä–∏–º–∫–∞' ? '–í–∏–¥–∏—Ö' :
              prevPhase === '–í–∏–¥–∏—Ö' ? '–ü–∞—É–∑–∞' : '–í–¥–∏—Ö';

            if (prevPhase === '–ü–∞—É–∑–∞') {
              setCycleCount((c) => c + 1);
              if (studentId) logActivity();
            }

            return next;
          });
          return 4;
        }
        return prev - 1;
      });
    }, 1000);

    return () => clearInterval(interval);
  }, [studentId]);

  const logActivity = async () => {
    try {
      await fetch('https://focused-server.onrender.com/log-activity', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          student_id: studentId,
          activity_type: '–î–∏—Ö–∞–ª—å–Ω–∞ –≤–ø—Ä–∞–≤–∞',
          duration_minutes: 1,
          emotion: mood
        }),
      });
    } catch (err) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–∏—Ö–∞–Ω–Ω—è:', err);
    }
  };

  const moodGreeting = {
    —Ä–∞–¥—ñ—Å–Ω–∏–π: 'üåû –ó–∞—Ä—è–¥–∏–º–æ —â–µ –±—ñ–ª—å—à–µ –ø–æ–∑–∏—Ç–∏–≤—É!',
    –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π: 'üôÇ –°–ø–æ–∫—ñ–π ‚Äî —Ü–µ —Å—É–ø–µ—Ä—Å–∏–ª–∞.',
    —Å—É–º–Ω–∏–π: 'üíô –ì–ª–∏–±–æ–∫–µ –¥–∏—Ö–∞–Ω–Ω—è –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ —Ç—Ä–æ—Ö–∏ –≤—ñ–¥–ø—É—Å—Ç–∏—Ç–∏ —Å—É–º.',
    –∑–ª–∏–π: 'üò° –í–¥–∏—Ö–Ω–∏... —ñ –≤—ñ–¥–ø—É—Å—Ç–∏ –∑–ª—ñ—Å—Ç—å.',
    —Ç—Ä–∏–≤–æ–∂–Ω–∏–π: 'üò∞ –†–∞–∑–æ–º —ñ–∑ –õ—é–º—ñ –¥–∏—Ö–∞—î–º–æ –ø–æ–≤—ñ–ª—å–Ω–æ –π –∑–∞—Å–ø–æ–∫–æ—é—î–º–æ—Å—å.'
  };

  return (
    <div style={{ padding: '2rem', textAlign: 'center', fontFamily: 'Arial, sans-serif' }}>
      <h2>ü´Å –î–∏—Ö–∞–ª—å–Ω–∞ –≤–ø—Ä–∞–≤–∞: –∫–≤–∞–¥—Ä–∞—Ç–Ω–µ –¥–∏—Ö–∞–Ω–Ω—è</h2>
      <p>{assistant} –∫–∞–∂–µ: "{moodGreeting[mood] || '–î–∞–≤–∞–π –∑—Ä–æ–±–∏–º–æ —Ü–µ —Ä–∞–∑–æ–º!'}"</p>

      <div style={{ fontSize: '3rem', margin: '2rem 0' }}>{phase}: {count}</div>

      {cycleCount >= 1 && (
        <div style={{ marginTop: '1rem', background: '#e0f7fa', padding: '1rem', borderRadius: '10px' }}>
          <p>‚ú® {assistant} –∫–∞–∂–µ: "–¢–∏ –≤–∂–µ –∑—Ä–æ–±–∏–≤(–ª–∞) {cycleCount} –∫–æ–ª–æ –¥–∏—Ö–∞–Ω–Ω—è. –¢–∏ —á—É–¥–æ–≤–æ —Å–ø—Ä–∞–≤–ª—è—î—à—Å—è!"</p>
        </div>
      )}

      <button
        onClick={() => navigate('/menu')}
        style={{ marginTop: '2rem', padding: '0.7rem 1.5rem', fontSize: '1rem', borderRadius: '10px', border: 'none', backgroundColor: '#007BFF', color: 'white', cursor: 'pointer' }}
      >‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é</button>
    </div>
  );
}
