import React, { useEffect, useRef, useState } from 'react';
import { connectWebSocket } from './webSocketService'; // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Å–µ—Ä–≤—ñ—Å –¥–ª—è WebSocket

const Forum = () => {
  const [messages, setMessages] = useState([]);
  const [nickname, setNickname] = useState('–Ø');
  const [text, setText] = useState('');
  const messageEndRef = useRef(null); // –î–ª—è –ø—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è –¥–æ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  const socket = useRef(null); // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ WebSocket

  // –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è –¥–æ WebSocket —ñ –æ—Ç—Ä–∏–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  useEffect(() => {
    // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ WebSocket —ñ –ø–µ—Ä–µ–¥–∞—á–∞ callback –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    socket.current = connectWebSocket('wss://focused-community-server.onrender.com', (data) => {
      console.log('–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞:', data); // –õ–æ–≥—É—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ

      if (data.type === 'history') {
        setMessages(data.messages); // –Ø–∫—â–æ —Ç–∏–ø 'history', —Ç–æ –æ–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
      } else if (data.type === 'new-message') {
        setMessages((prev) => [...prev, data.message]); // –Ø–∫—â–æ —Ç–∏–ø 'new-message', –¥–æ–¥–∞—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
      } else if (data.type === 'update-reaction') {
        setMessages((prev) =>
          prev.map((m) => (m.id === data.id ? { ...m, reaction: data.reaction } : m)) // –û–Ω–æ–≤–ª—é—î–º–æ —Ä–µ–∞–∫—Ü—ñ—ó
        );
      }
    });

    // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ WebSocket –ø—Ä–∏ –¥–µ–º–æ–Ω—Ç–∞–∂—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É
    return () => {
      if (socket.current) {
        socket.current.close();
      }
    };
  }, []);

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  const sendMessage = () => {
    if (text.trim()) {
      socket.current.send(
        JSON.stringify({
          type: 'new-message',
          text,
          nickname,
          avatar: 'üß†',
        })
      );
      setText(''); // –û—á–∏—â–∞—î–º–æ —Ç–µ–∫—Å—Ç –ø—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
    }
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–µ–∞–∫—Ü—ñ–π –¥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  const addReaction = (id, reaction) => {
    socket.current.send(
      JSON.stringify({
        type: 'reaction',
        id,
        reaction,
      })
    );
  };

  // –ü—Ä–æ–∫—Ä—É—á—É—î–º–æ –≤–Ω–∏–∑ –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Å–ø–∏—Å–∫—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
  useEffect(() => {
    if (messageEndRef.current) {
      messageEndRef.current.scrollIntoView({ behavior: 'smooth' }); // –ü—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è –¥–æ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    }
  }, [messages]);

  return (
    <div className="forum-wrapper" style={styles.wrapper}>
      <div className="forum-box" style={styles.box}>
        <h1 style={styles.header}>üå± –°–ø—ñ–ª—å–Ω–æ—Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏</h1>
        <div className="forum-messages" style={styles.messages}>
          {messages.map((msg) => (
            <div key={msg.id} className="message-card" style={styles.messageCard}>
              <div className="message-header" style={styles.messageHeader}>
                <span className="avatar" style={styles.avatar}>{msg.avatar}</span>
                <strong>{msg.nickname}</strong>
              </div>
              <p>{msg.text}</p>
              <div className="reactions" style={styles.reactions}>
                {['‚ù§Ô∏è', 'üëç', '‚≠ê', 'ü§ó'].map((r) => (
                  <button key={r} onClick={() => addReaction(msg.id, r)} style={styles.reactionButton}>
                    {r}
                  </button>
                ))}
                {msg.reaction && <span style={styles.selectedReaction}>{msg.reaction}</span>}
              </div>
            </div>
          ))}
          <div ref={messageEndRef} />
        </div>
        <div className="forum-inputs" style={styles.inputs}>
          <input
            placeholder="–¢–≤—ñ–π –Ω—ñ–∫"
            value={nickname}
            onChange={(e) => setNickname(e.target.value)}
            style={styles.input}
          />
          <textarea
            placeholder="–ü–æ–¥—ñ–ª–∏—Å—å —Å–≤–æ—ó–º–∏ –¥—É–º–∫–∞–º–∏..."
            value={text}
            onChange={(e) => setText(e.target.value)}
            style={styles.textarea}
          />
          <button onClick={sendMessage} style={styles.sendButton}>üí¨ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏</button>
        </div>
      </div>
    </div>
  );
};

// –°—Ç–∏–ª—ñ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
const styles = {
  wrapper: {
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    minHeight: '100vh',
    background: 'linear-gradient(to bottom right, #d8f3ff, #f3d8ff)',
    fontFamily: "'Comic Sans MS', 'Nunito', sans-serif',
    padding: '1rem',
    boxSizing: 'border-box',
  },
  box: {
    width: '100%',
    maxWidth: '600px',
    padding: '1.5rem',
    background: '#ffffff',
    borderRadius: '10px',
    boxShadow: '0 4px 10px rgba(0, 0, 0, 0.1)',
    overflow: 'hidden',
  },
  header: {
    fontSize: '24px',
    textAlign: 'center',
    color: '#6c5ce7',
  },
  messages: {
    maxHeight: '400px',
    overflowY: 'scroll',
    marginBottom: '1rem',
  },
  messageCard: {
    backgroundColor: '#f7f7f7',
    padding: '1rem',
    borderRadius: '10px',
    marginBottom: '1rem',
    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',
  },
  messageHeader: {
    display: 'flex',
    alignItems: 'center',
    marginBottom: '0.5rem',
  },
  avatar: {
    marginRight: '0.5rem',
    fontSize: '1.5rem',
  },
  reactions: {
    display: 'flex',
    gap: '0.5rem',
    marginTop: '0.5rem',
  },
  reactionButton: {
    border: 'none',
    background: 'none',
    cursor: 'pointer',
    fontSize: '1.5rem',
  },
  selectedReaction: {
    marginLeft: '1rem',
    fontSize: '1.5rem',
    color: '#6c5ce7',
  },
  inputs: {
    display: 'flex',
    flexDirection: 'column',
  },
  input: {
    padding: '0.8rem',
    marginBottom: '1rem',
    borderRadius: '10px',
    border: '1px solid #ccc',
    fontSize: '1rem',
  },
  textarea: {
    padding: '0.8rem',
    marginBottom: '1rem',
    borderRadius: '10px',
    border: '1px solid #ccc',
    fontSize: '1rem',
    height: '100px',
  },
  sendButton: {
    padding: '0.8rem',
    backgroundColor: '#6c5ce7',
    color: '#fff',
    border: 'none',
    borderRadius: '12px',
    cursor: 'pointer',
    fontSize: '1rem',
  },
};

export default Forum;
